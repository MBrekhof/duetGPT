@page "/claude"
@using Claudia
@rendermode InteractiveServer

<DxGridLayout style="height:90%" CssClass="w-100 ch-480">
    <Rows>
        <DxGridLayoutRow Height="100px" />
        <DxGridLayoutRow />
        <DxGridLayoutRow Height="auto" />
    </Rows>
    <Columns>
        <DxGridLayoutColumn Width="2fr" />
        <DxGridLayoutColumn Width="70%" />
        <DxGridLayoutColumn />
    </Columns>
    <Items>
        <DxGridLayoutItem Row="0" Column="0" >
            <Template>
                <div class="gridlayout-header gridlayout-item">
                    
                </div>
            </Template>
        </DxGridLayoutItem>
        <DxGridLayoutItem Row="0" Column="1">
            <Template>
                <div class="gridlayout-header gridlayout-item bold-large-text">
                    duetGPT
                </div>
            </Template>
        </DxGridLayoutItem>
        <DxGridLayoutItem Row="0" Column="2">
            <Template>
                <div class="gridlayout-header gridlayout-item">
                    <DxComboBox Data="@_models" @bind-Value="@ModelValue" ShowDropDownButton=false>
                        <Buttons>
                            <DxComboBoxDropDownButton Position="EditorButtonPosition.Left"/>
                        </Buttons>
                    </DxComboBox>
                </div>
            </Template>
        </DxGridLayoutItem>
        <DxGridLayoutItem Row="1" Column="1">
            <Template>
                <div class="gridlayout-content gridlayout-item">
                    Content
                </div>
            </Template>
        </DxGridLayoutItem>
        <DxGridLayoutItem Row="1" Column="0">
            <Template>
                <div class="gridlayout-left-side-bar gridlayout-item">
                    Left Bar
                </div>
            </Template>
        </DxGridLayoutItem>
        <DxGridLayoutItem Row="1" Column="2">
            <Template>
                <div class="gridlayout-right-side-bar gridlayout-item">
                    Right Bar
                </div>
            </Template>
        </DxGridLayoutItem>
        <DxGridLayoutItem Row="2" Column="0" ColumnSpan="3">
            <Template>
                <div class="gridlayout-footer gridlayout-item">
                    Footer
                </div>
            </Template>
        </DxGridLayoutItem>
    </Items>
</DxGridLayout>

@code{

    enum Model
    {
        Haiku,
        Opus,
        Sonnet,
    }
    IEnumerable<Model> _models = Enum.GetValues(typeof(Model)).Cast<Model>();

    Model ModelValue { get; set; }
    
    protected override void OnInitialized()
    {
        ModelValue = _models.FirstOrDefault();
    }
}
@* <script> *@
@*     var rangeInput = document.querySelector(".range_slider"); *@
@*     var rangeBubble = document.querySelector(".range_bubble"); *@
@* *@
@*     rangeInput.addEventListener("input", () => { *@
@*         setBubble(rangeInput, rangeBubble); *@
@*     }); *@
@*     rangeInput.addEventListener("mouseover", () => { *@
@*         setBubble(rangeInput, rangeBubble); *@
@*     }); *@
@*     rangeInput.addEventListener("mouseleave", () => { *@
@*         rangeBubble.style.display = "none"; *@
@*     }); *@
@* *@
@*     function setBubble(range, bubble) { *@
@*         var val = range.value; *@
@*         var min = range.min ? range.min : 0; *@
@*         var max = range.max ? range.max : 100; *@
@*         var newVal = Number(((val - min) * 100) / (max - min)); *@
@*         bubble.innerHTML = val; *@
@*         bubble.style.left = `calc(${newVal}% + (${-5 - newVal * 0.15}px))`; *@
@*         rangeBubble.style.display = "inline-block"; *@
@*     } *@
@* </script> *@