@page "/claude"
@using Claudia
@rendermode InteractiveServer

<style>
    .header-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin: 20px 10px; /* Adjust margins as needed */
    }
    .title {
        text-align: center;
        font-size: 24px;
        font-weight: bold;
        /*margin-top: 20px;*/
        /*margin-bottom: 20px;*/
    }

    .input-container {
        position: fixed;
        bottom: 10px;
        left: 0;
        right: 0;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .input-box {
        width: 800px;
        min-height: 60px;
        resize: vertical;
        margin-right: 10px;
    }

    
    .messages-container {
        max-height: calc(100vh - 200px);
        overflow-y: auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 20px;
    }

    message {
        background-color: #f0f0f0;
        padding: 10px;
        margin-bottom: 10px;
        border-radius: 5px;
        text-align: left; /* This will align the message to the left by default */
    }

    .message:nth-child(odd) {
        text-align: right; /* This will align the odd-indexed messages to the right */
    }
    .bg-blue {
        background-color: #add8e6; /* Light blue */
        color: #000000; /* Black text color */
    }

    .bg-green {
        background-color: #90ee90; /* Light green */
        color: #000000; /* Black text color */
    }
</style>

<div class="header-container">
    <div class="title">Chat Application</div>

    <DxComboBox Data="@_models" @bind-Value="@ModelValue" ShowDropDownButton=false>
        <Buttons>
            <DxComboBoxDropDownButton Position="EditorButtonPosition.Left"/>
        </Buttons>
    </DxComboBox>
</div>
<DxLoadingPanel @bind-Visible="@running" IndicatorAnimationType="WaitIndicatorAnimationType.Pulse"
                IsContentBlocked="true"
                ApplyBackgroundShading="true"
                IndicatorAreaVisible="false"
                Text="thinking...">
    <div class="messages-container">
        @{
        int index = 0;
        foreach (var message in formattedMessages)
        {
        <div class="message @(index % 2 == 0 ? "bg-blue" : "bg-green")">
            @(((MarkupString)message))
        </div>
        index++;
        }
        }
    </div>
</DxLoadingPanel>

<div class="input-container">
    <textarea class="input-box" @bind="textInput" rows="3"></textarea>
    <button class="btn btn-primary" @onclick="SendClick">&#x2192;</button>
    <button class="btn btn-danger" @onclick="ClearThread" style="font-weight: bold;">X</button>  
</div>




