@page "/messages"
@using DevExpress.Blazor
@using duetGPT.Data
@using Markdig
@rendermode InteractiveServer

<style>
    .bg-blue {
        background-color: #add8e6;
        color: #000000;
        padding: 10px;
        margin-bottom: 10px;
        border-radius: 5px;
    }
    .bg-green {
        background-color: #90ee90;
        color: #000000;
        padding: 10px;
        margin-bottom: 10px;
        border-radius: 5px;
    }
    .message-content {
        white-space: pre-wrap;
        word-wrap: break-word;
    }
</style>

<h3>Message Threads</h3>

@if (ErrorMessage != null)
{
    <div class="alert alert-danger">@ErrorMessage</div>
}
else if (GridDataSource == null)
{
    <div>Loading...</div>
}
else if (!GridDataSource.Any())
{
    <div class="alert alert-info">No threads found. Try starting a new conversation.</div>
}
else
{
    <div class="mb-3">Found @GridDataSource.Count threads</div>
    <DxGrid Data="@GridDataSource" ShowFilterRow="true" ShowPager="true" PageSize="20" KeyFieldName="Id">
        <Columns>
            <DxGridDataColumn FieldName="Id" Caption="ID" Width="80px" />
            <DxGridDataColumn FieldName="Title" Caption="Thread" Width="300px">
                <CellDisplayTemplate>
                    @{
                        var thread = (context.DataItem as DuetThread);
                        <div style="cursor: pointer;" @onclick="@(() => ShowThreadMessages(thread))">
                            @thread.Title
                        </div>
                    }
                </CellDisplayTemplate>
            </DxGridDataColumn>
            <DxGridDataColumn FieldName="StartTime" Caption="Created" Width="150px" DisplayFormat="g" />
            <DxGridDataColumn FieldName="TotalTokens" Caption="Tokens" Width="100px" />
            <DxGridDataColumn FieldName="Cost" Caption="Cost" Width="100px" DisplayFormat="C" />
            <DxGridDataColumn Width="100px" Caption="Actions">
                <CellDisplayTemplate>
                    @{
                        var thread = (context.DataItem as DuetThread);
                        <DxButton IconCssClass="oi oi-trash"
                                 Click="@(() => ShowDeleteConfirmation(thread))"
                                 RenderStyle="ButtonRenderStyle.Danger"
                                 Attributes="@(new Dictionary<string, object> { ["title"] = "Delete Thread" })" />
                    }
                </CellDisplayTemplate>
            </DxGridDataColumn>
        </Columns>
    </DxGrid>
}

<DxPopup @bind-Visible="@PopupVisible" HeaderText="Thread Messages" Width="800px">
    <Content>
        <div style="max-height: 500px; overflow-y: auto;">
            @if (ThreadMessages != null && ThreadMessages.Any())
            {
                <div style="display: flex; flex-direction: column; gap: 10px;">
                    @{
                        var index = 0;
                        foreach (var message in ThreadMessages.OrderBy(m => m.Created))
                        {
                            <div class="@(index % 2 == 0 ? "bg-blue" : "bg-green")">
                                <div><strong>@message.Role</strong> - @message.Created.ToString("g")</div>
                                <div class="message-content">
                                    @((MarkupString)FormatMessage(message.Content))
                                </div>
                                <div style="font-size: 0.8em; margin-top: 5px;">
                                    Tokens: @message.TokenCount | Cost: @message.MessageCost.ToString("C")
                                </div>
                            </div>
                            index++;
                        }
                    }
                </div>
            }
            else
            {
                <div class="alert alert-info">No messages found in this thread.</div>
            }
        </div>
        <div class="mt-3">
            <DxButton IconCssClass="oi oi-x"
                     Click="@(() => PopupVisible = false)"
                     RenderStyle="ButtonRenderStyle.Secondary"
                     Attributes="@(new Dictionary<string, object> { ["title"] = "Close" })" />
        </div>
    </Content>
</DxPopup>

<DxPopup @bind-Visible="@DeleteConfirmationVisible" 
         HeaderText="Confirm Delete" 
         Width="400px">
    <Content>
        <div class="mb-3">
            Are you sure you want to delete this thread and all its messages?
        </div>
        <div>
            <DxButton IconCssClass="oi oi-trash"
                     Click="@DeleteThreadAsync"
                     RenderStyle="ButtonRenderStyle.Danger"
                     CssClass="me-2"
                     Attributes="@(new Dictionary<string, object> { ["title"] = "Confirm Delete" })" />
            <DxButton IconCssClass="oi oi-x"
                     Click="@(() => DeleteConfirmationVisible = false)"
                     RenderStyle="ButtonRenderStyle.Secondary"
                     Attributes="@(new Dictionary<string, object> { ["title"] = "Cancel" })" />
        </div>
    </Content>
</DxPopup>
