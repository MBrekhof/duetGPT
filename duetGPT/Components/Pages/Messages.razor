@page "/messages"
@using DevExpress.Blazor
@using duetGPT.Data
@rendermode InteractiveServer

<h3>Message Threads</h3>

@if (ErrorMessage != null)
{
    <div class="alert alert-danger">@ErrorMessage</div>
}
else if (GridDataSource == null)
{
    <div>Loading...</div>
}
else if (!GridDataSource.Any())
{
    <div class="alert alert-info">No threads found. Try starting a new conversation.</div>
}
else
{
    <div class="mb-3">Found @GridDataSource.Count threads</div>
    <DxGrid Data="@GridDataSource" ShowFilterRow="true" ShowPager="true" PageSize="20" KeyFieldName="Id">
        <Columns>
            <DxGridDataColumn FieldName="Id" Caption="ID" Width="80px" />
            <DxGridDataColumn FieldName="Title" Caption="Thread" Width="300px">
                <CellDisplayTemplate>
                    @{
                        var thread = (context.DataItem as DuetThread);
                        <div style="cursor: pointer;" @onclick="@(() => ShowThreadMessages(thread))">
                            @thread.Title
                        </div>
                    }
                </CellDisplayTemplate>
            </DxGridDataColumn>
            <DxGridDataColumn FieldName="StartTime" Caption="Created" Width="150px" DisplayFormat="g" />
            <DxGridDataColumn FieldName="TotalTokens" Caption="Tokens" Width="100px" />
            <DxGridDataColumn FieldName="Cost" Caption="Cost" Width="100px" DisplayFormat="C" />
            <DxGridDataColumn Width="100px" Caption="Actions">
                <CellDisplayTemplate>
                    @{
                        var thread = (context.DataItem as DuetThread);
                        <DxButton IconCssClass="oi oi-trash"
                                 Click="@(() => ShowDeleteConfirmation(thread))"
                                 RenderStyle="ButtonRenderStyle.Danger"
                                 Attributes="@(new Dictionary<string, object> { ["title"] = "Delete Thread" })" />
                    }
                </CellDisplayTemplate>
            </DxGridDataColumn>
        </Columns>
    </DxGrid>
}

<DxPopup @bind-Visible="@PopupVisible" HeaderText="Thread Messages" Width="800px">
    <Content>
        <div style="max-height: 500px; overflow-y: auto;">
            @if (ThreadMessages != null && ThreadMessages.Any())
            {
                <DxGrid Data="@ThreadMessages" ShowPager="true" PageSize="10" KeyFieldName="Id">
                    <Columns>
                        <DxGridDataColumn FieldName="Id" Caption="ID" Width="80px" />
                        <DxGridDataColumn FieldName="Role" Caption="Role" Width="100px" />
                        <DxGridDataColumn FieldName="Content" Caption="Content" Width="400px" />
                        <DxGridDataColumn FieldName="Created" Caption="Created" Width="150px" DisplayFormat="g" />
                        <DxGridDataColumn FieldName="TokenCount" Caption="Tokens" Width="100px" />
                        <DxGridDataColumn FieldName="MessageCost" Caption="Cost" Width="100px" DisplayFormat="C" />
                    </Columns>
                </DxGrid>
            }
            else
            {
                <div class="alert alert-info">No messages found in this thread.</div>
            }
        </div>
        <div class="mt-3">
            <DxButton IconCssClass="oi oi-x"
                     Click="@(() => PopupVisible = false)"
                     RenderStyle="ButtonRenderStyle.Secondary"
                     Attributes="@(new Dictionary<string, object> { ["title"] = "Close" })" />
        </div>
    </Content>
</DxPopup>

<DxPopup @bind-Visible="@DeleteConfirmationVisible" 
         HeaderText="Confirm Delete" 
         Width="400px">
    <Content>
        <div class="mb-3">
            Are you sure you want to delete this thread and all its messages?
        </div>
        <div>
            <DxButton IconCssClass="oi oi-trash"
                     Click="@DeleteThreadAsync"
                     RenderStyle="ButtonRenderStyle.Danger"
                     CssClass="me-2"
                     Attributes="@(new Dictionary<string, object> { ["title"] = "Confirm Delete" })" />
            <DxButton IconCssClass="oi oi-x"
                     Click="@(() => DeleteConfirmationVisible = false)"
                     RenderStyle="ButtonRenderStyle.Secondary"
                     Attributes="@(new Dictionary<string, object> { ["title"] = "Cancel" })" />
        </div>
    </Content>
</DxPopup>
